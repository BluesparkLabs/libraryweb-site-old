<?php
/**
 * @file
 * Code for the UCLALIB Search feature.
 */

include_once 'uclalib_search.features.inc';

/**
 * Implements hook_entity_property_info_alter().
 *
 * From: https://drupal.org/node/1480882
 *
 * We add an additional property to the locations that can be indexed by search_api.
 * This property will be the position of the node in a given queue.
 * Once the node is indexed it can be used in views to sort.
 */
function uclalib_search_entity_property_info_alter(&$info) {
  $bundles = &$info['node']['bundles'];
  $bundles['location']['properties']['queue_position'] = array(
    'type' => 'integer',
    'label' => 'Queue position',
    'getter callback' => 'uclalib_search_queue_position',
    'description' => t('Position in the nodequeue'),
    'entity views field' => TRUE,
  );
}

/**
 * Entity property getter callback: Returns the relevant nodequeue position for the queue.
 */
function uclalib_search_queue_position($entity, $options, $name, $entity_type, $info) {
  $queue = nodequeue_load_queue_by_name('promoted_locations');
  $subqueues = nodequeue_load_subqueues_by_queue($queue->qid);
  $subqueue = reset($subqueues);

  if ($pos = nodequeue_get_subqueue_position($subqueue->sqid, $entity->nid)) {
    // Easier to reverse the queue ordering so that we can order in a way that NULL/0 comes last.
    return -1 * (1+ $subqueue->count - $pos);
  }
}

/**
 * Implements hook_views_pre_view().
 */
function uclalib_search_views_pre_view(&$view, &$display_id, &$args) {
  /**
   * In case there is filtering in place, skip sorting by promoted queue.
   */
  if ($view->name == 'location_search') {
    if ((isset($_GET['f']) && is_array($_GET['f']) && !empty($_GET['f'])) ||
      (isset($_GET['search_api_views_fulltext']) && !empty($_GET['search_api_views_fulltext']))){
      unset($view->display['default']->handler->options['sorts']['queue_position']);
    }
  }
}

/**
 * Implements hook_nodequeue_save_subqueue_order_alter().
 *
 * When the promoted locations nodequeue is saved, reindex all location nodes.
 */
function uclalib_search_nodequeue_save_subqueue_order_alter($sqid, $nodes) {
  $queue = nodequeue_load_queue_by_name('promoted_locations');
  $subqueues = nodequeue_load_subqueues_by_queue($queue->qid);
  $subqueue = reset($subqueues);

  if ($sqid == $subqueue->sqid) {
    $nids = db_select('node', 'n')
      ->condition('type', 'location')
      ->fields('n', array('nid'))
      ->execute()
      ->fetchAllAssoc('nid');
    $nids = array_keys($nids);

    search_api_track_item_change('node', $nids);
  }
}

/**
 * Implements hook_facet_items_alter()
 */
function uclalib_search_facet_items_alter(&$build, &$settings) {
  foreach ($build as $key => $values) {
    if ($key == 'location') {
      $build[$key]['#markup'] = t('Libraries Only');
    }
    if ($key == 'destination') {
      unset($build[$key]);
    }
  }
}
